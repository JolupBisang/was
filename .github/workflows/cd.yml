name: cd

on:
  push:
    branches:
      - develop

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # push 할 코드 내려받기
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # 자바 다운로드 및 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Docker 이미지 build 및 push
      - name: docker build and push
        run: |
          echo ${{secrets.APPLICATION_SECRET}} | base64 -d > src/main/resources/application-secret.yml
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jolupbisang:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/jolupbisang:latest
          docker image prune -a

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 현재 서버의 상태와 포트 확인 및 업스트림 설정
      - name: Set target IP
        run: |
          STATUS=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets.EC2_IP }}/env")
          echo "STATUS: $STATUS"
          if [ $STATUS = 200 ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets.EC2_IP }}/env")
          else
            CURRENT_UPSTREAM=green
          fi
          echo CURRENT_UPSTREAM=$CURRENT_UPSTREAM >> $GITHUB_ENV
          if [ $CURRENT_UPSTREAM = blue ]; then
            echo "CURRENT_PORT=8080" >> $GITHUB_ENV
            echo "STOPPED_PORT=8081" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV  
          else
            echo "CURRENT_PORT=8081" >> $GITHUB_ENV
            echo "STOPPED_PORT=8080" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
          fi

      # Docker 이미지 pull 및 compose up
      - name: Docker compose
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.EC2_USERNAME }}
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/jolupbisang:latest
            sudo docker-compose -f docker-compose-${{env.TARGET_UPSTREAM}}.yml up -d

      # 실행한 서버 Health Check
      - name: Check deploy server URL
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://${{ secrets.EC2_IP }}:${{env.STOPPED_PORT}}/env
          max-attempts: 5
          retry-delay: 10s

      # Nginx upstream 변경
      - name: Change nginx upstream
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.EC2_USERNAME }}
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo docker exec -i nginx_server bash -c 'echo "set \$service_url ${{ env.TARGET_UPSTREAM }};" > /etc/nginx/conf.d/service-env.inc && nginx -s reload' 

      # 기존 서버 중지
      - name: Stop current server
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.EC2_USERNAME }}
          host: ${{ secrets.EC2_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo docker stop ${{env.CURRENT_UPSTREAM}}
            sudo docker rm ${{env.CURRENT_UPSTREAM}}
